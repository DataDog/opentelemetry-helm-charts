receivers:
  prometheus:
    config:
      scrape_configs:
        - job_name: "otelcol"
          scrape_interval: 10s
          static_configs:
            - targets: ["0.0.0.0:8888"]
          metric_relabel_configs:
            - source_labels: [__name__]
              regex: ".*grpc_io.*"
              action: drop
  k8s_cluster:
    collection_interval: 10s
  hostmetrics:
    collection_interval: 10s
    scrapers:
      paging:
        metrics:
          system.paging.utilization:
            enabled: true
          system.paging.usage:
            enabled: true
      cpu:
        metrics:
          system.cpu.utilization:
            enabled: true
      disk:
      filesystem:
        metrics:
          system.filesystem.utilization:
            enabled: true
      load:
      memory:
        metrics:
          system.memory.utilization:
            enabled: true
      network:
        metrics:
          system.network.io.receive:
            enabled: true
          system.network.io.transmit:
            enabled: true
      processes:
  otlp:
    protocols:
      grpc:
      http:

  kubeletstats:
    auth_type: serviceAccount
    collection_interval: 60s
    insecure_skip_verify: true
    k8s_api_config:
      auth_type: serviceAccount
    metric_groups:
      - node
      - pod
      - container

  filelog/adservice:
    include_file_path: true
    include_file_path_resolved: true
    include_file_name_resolved: true
    start_at: end
    poll_interval: 500ms
    include:
      - /var/log/pods/**/*ad-service*/*.log
    operators:
      # Detect pod, namespace, and container names from the file name.
      - id: parse_body
        type: json_parser
        parse_to: body
      - id: parse_log
        type: json_parser
        parse_from: body.log
      - id: trace
        type: trace_parser
        trace_id:
          parse_from: attributes.contextMap.trace_id
        span_id:
          parse_from: attributes.contextMap.span_id
    attributes:
      ddsource: java
      service: ad-service

  filelog/checkout:
    include:
      - /var/log/pods/**/*checkout*/*.log
    include_file_path: true
    include_file_path_resolved: true
    include_file_name_resolved: true
    start_at: end
    poll_interval: 500ms
    operators:
      # Detect pod, namespace, and container names from the file name.
      - id: parse_body
        type: json_parser
        parse_to: body
      - id: parse_log
        type: json_parser
        parse_from: body.log
      - id: severity
        type: severity_parser
        parse_from: attributes.severity
      - id: trace
        type: trace_parser
        trace_id:
          parse_from: attributes.trace_id
        span_id:
          parse_from: attributes.span_id
    attributes:
      ddsource: golang

  filelog/productcatalog:
    include:
      - /var/log/pods/**/*product-catalog*/*.log
    include_file_path: true
    include_file_path_resolved: true
    include_file_name_resolved: true
    start_at: end
    poll_interval: 500ms
    operators:
      # Detect pod, namespace, and container names from the file name.
      - id: parse_body
        type: json_parser
        parse_to: body
      - id: parse_log
        type: json_parser
        parse_from: body.log
      - id: severity
        type: severity_parser
        parse_from: attributes.severity
      - id: trace
        type: trace_parser
        trace_id:
          parse_from: attributes.trace_id
        span_id:
          parse_from: attributes.span_id
    attributes:
      ddsource: golang
  filelog/recommendationservice:
    include:
      - /var/log/pods/**/*recommendation*/*.log
    include_file_path: true
    include_file_path_resolved: true
    include_file_name_resolved: true
    start_at: end
    poll_interval: 500ms
    operators:
      # Detect pod, namespace, and container names from the file name.
      - id: parse_body
        type: json_parser
        parse_to: body
      - id: parse_log
        type: json_parser
        parse_from: body.log
      - id: trace
        type: trace_parser
        trace_id:
          parse_from: attributes.otelTraceID
        span_id:
          parse_from: attributes.otelSpanID
    attributes:
      ddsource: python
      service: recommendation-service
exporters:
  datadog:
    api:
      key: "$DD_API_KEY"
    logs:
      send_log_record_body: false

processors:
  resourcedetection:
    # ensures host.name and other important resource tags
    # get picked up
    detectors: [env, gcp, ecs, ec2, azure, system]
    timeout: 5s
    override: false
  # adds various tags related to k8s
  k8sattributes:
  batch:
    send_batch_max_size: 1000
    send_batch_size: 100
    timeout: 10s

service:
  pipelines:
    metrics:
      receivers: [otlp, k8s_cluster, hostmetrics, prometheus, kubeletstats]
      processors: [resourcedetection, k8sattributes, batch]
      exporters: [datadog]
    traces:
      receivers: [otlp]
      processors: [resourcedetection, k8sattributes, batch]
      exporters: [datadog]
    logs:
      receivers: [filelog/checkout,filelog/adservice, filelog/recommendationservice, filelog/productcatalog]
      processors: [resourcedetection, k8sattributes, batch]
      exporters: [datadog]
